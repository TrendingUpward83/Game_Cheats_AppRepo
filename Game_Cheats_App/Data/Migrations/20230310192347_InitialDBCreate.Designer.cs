// <auto-generated />
using System;
using Game_Cheats_App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Game_Cheats_App.Data.Migrations
{
    [DbContext(typeof(GameCheatsDbContext))]
    [Migration("20230310192347_InitialDBCreate")]
    partial class InitialDBCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Game_Cheats_App.Models.Cheats", b =>
                {
                    b.Property<int>("CheatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheatId"), 1L, 1);

                    b.Property<string>("CheatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.HasKey("CheatId");

                    b.HasIndex("GameId");

                    b.ToTable("Cheats");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Games", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"), 1L, 1);

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Games_Cheats", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("CheatId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "CheatId");

                    b.HasIndex("CheatId");

                    b.ToTable("Games_Cheats");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Platforms", b =>
                {
                    b.Property<int>("PlatformId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatformId"), 1L, 1);

                    b.Property<string>("PlatformName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlatformId");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Platforms_Games", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("Platforms_Games");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Cheats", b =>
                {
                    b.HasOne("Game_Cheats_App.Models.Games", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Games", b =>
                {
                    b.HasOne("Game_Cheats_App.Models.Platforms", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Games_Cheats", b =>
                {
                    b.HasOne("Game_Cheats_App.Models.Cheats", "Cheats")
                        .WithMany("GamesCheats")
                        .HasForeignKey("CheatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game_Cheats_App.Models.Games", "Games")
                        .WithMany("GamesCheats")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cheats");

                    b.Navigation("Games");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Platforms_Games", b =>
                {
                    b.HasOne("Game_Cheats_App.Models.Games", "Games")
                        .WithMany("PlatformsGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game_Cheats_App.Models.Platforms", "Platforms")
                        .WithMany("PlatformsGames")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Games");

                    b.Navigation("Platforms");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Cheats", b =>
                {
                    b.Navigation("GamesCheats");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Games", b =>
                {
                    b.Navigation("GamesCheats");

                    b.Navigation("PlatformsGames");
                });

            modelBuilder.Entity("Game_Cheats_App.Models.Platforms", b =>
                {
                    b.Navigation("PlatformsGames");
                });
#pragma warning restore 612, 618
        }
    }
}
